"""Initial migration

Revision ID: ff99f8f4f45a
Revises: 
Create Date: 2025-06-03 11:29:33.562937

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ff99f8f4f45a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stocks',
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('sector', sa.String(length=100), nullable=True),
    sa.Column('industry', sa.String(length=150), nullable=True),
    sa.Column('market_cap', sa.BigInteger(), nullable=True),
    sa.Column('current_price', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('exchange', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('employees', sa.Integer(), nullable=True),
    sa.Column('founded_year', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('symbol')
    )
    op.create_index('idx_stock_exchange', 'stocks', ['exchange'], unique=False)
    op.create_index('idx_stock_market_cap', 'stocks', ['market_cap'], unique=False)
    op.create_index('idx_stock_sector', 'stocks', ['sector'], unique=False)
    op.create_index(op.f('ix_stocks_symbol'), 'stocks', ['symbol'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('risk_profile', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('portfolios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stock_symbol', sa.String(length=10), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('average_cost', sa.Float(), nullable=False),
    sa.Column('purchase_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['stock_symbol'], ['stocks.symbol'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_portfolio_stock', 'portfolios', ['stock_symbol'], unique=False)
    op.create_index('idx_portfolio_user', 'portfolios', ['user_id'], unique=False)
    op.create_index(op.f('ix_portfolios_id'), 'portfolios', ['id'], unique=False)
    op.create_table('predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stock_symbol', sa.String(length=10), nullable=False),
    sa.Column('prediction_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('target_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('predicted_price', sa.Float(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('lower_bound', sa.Float(), nullable=True),
    sa.Column('upper_bound', sa.Float(), nullable=True),
    sa.Column('model_version', sa.String(length=50), nullable=False),
    sa.Column('model_type', sa.String(length=50), nullable=False),
    sa.Column('features_used', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['stock_symbol'], ['stocks.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_prediction_model', 'predictions', ['model_type', 'model_version'], unique=False)
    op.create_index('idx_prediction_stock_date', 'predictions', ['stock_symbol', 'prediction_date'], unique=False)
    op.create_index('idx_prediction_target_date', 'predictions', ['target_date'], unique=False)
    op.create_index(op.f('ix_predictions_id'), 'predictions', ['id'], unique=False)
    op.create_table('price_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stock_symbol', sa.String(length=10), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('open_price', sa.Float(), nullable=False),
    sa.Column('high_price', sa.Float(), nullable=False),
    sa.Column('low_price', sa.Float(), nullable=False),
    sa.Column('close_price', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=True),
    sa.Column('adjusted_close', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['stock_symbol'], ['stocks.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_price_history_date', 'price_history', ['date'], unique=False)
    op.create_index('idx_price_history_stock_date', 'price_history', ['stock_symbol', 'date'], unique=True)
    op.create_index(op.f('ix_price_history_id'), 'price_history', ['id'], unique=False)
    op.create_table('stock_analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stock_symbol', sa.String(length=10), nullable=False),
    sa.Column('analysis_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('fundamental_score', sa.Float(), nullable=False),
    sa.Column('technical_score', sa.Float(), nullable=False),
    sa.Column('sentiment_score', sa.Float(), nullable=False),
    sa.Column('overall_rating', sa.String(length=20), nullable=False),
    sa.Column('key_metrics', sa.Text(), nullable=True),
    sa.Column('analyst_consensus', sa.String(length=20), nullable=True),
    sa.Column('risk_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['stock_symbol'], ['stocks.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_analysis_rating', 'stock_analyses', ['overall_rating'], unique=False)
    op.create_index('idx_analysis_stock_date', 'stock_analyses', ['stock_symbol', 'analysis_date'], unique=False)
    op.create_index(op.f('ix_stock_analyses_id'), 'stock_analyses', ['id'], unique=False)
    op.create_table('watchlists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stock_symbol', sa.String(length=10), nullable=False),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('alert_price_target', sa.Float(), nullable=True),
    sa.Column('alert_percentage_change', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['stock_symbol'], ['stocks.symbol'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_stock_unique', 'watchlists', ['user_id', 'stock_symbol'], unique=True)
    op.create_index(op.f('ix_watchlists_id'), 'watchlists', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_watchlists_id'), table_name='watchlists')
    op.drop_index('idx_user_stock_unique', table_name='watchlists')
    op.drop_table('watchlists')
    op.drop_index(op.f('ix_stock_analyses_id'), table_name='stock_analyses')
    op.drop_index('idx_analysis_stock_date', table_name='stock_analyses')
    op.drop_index('idx_analysis_rating', table_name='stock_analyses')
    op.drop_table('stock_analyses')
    op.drop_index(op.f('ix_price_history_id'), table_name='price_history')
    op.drop_index('idx_price_history_stock_date', table_name='price_history')
    op.drop_index('idx_price_history_date', table_name='price_history')
    op.drop_table('price_history')
    op.drop_index(op.f('ix_predictions_id'), table_name='predictions')
    op.drop_index('idx_prediction_target_date', table_name='predictions')
    op.drop_index('idx_prediction_stock_date', table_name='predictions')
    op.drop_index('idx_prediction_model', table_name='predictions')
    op.drop_table('predictions')
    op.drop_index(op.f('ix_portfolios_id'), table_name='portfolios')
    op.drop_index('idx_portfolio_user', table_name='portfolios')
    op.drop_index('idx_portfolio_stock', table_name='portfolios')
    op.drop_table('portfolios')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_stocks_symbol'), table_name='stocks')
    op.drop_index('idx_stock_sector', table_name='stocks')
    op.drop_index('idx_stock_market_cap', table_name='stocks')
    op.drop_index('idx_stock_exchange', table_name='stocks')
    op.drop_table('stocks')
    # ### end Alembic commands ###
